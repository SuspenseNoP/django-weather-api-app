name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to run (apply or destroy)'
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1 

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        if: ${{ github.event.inputs.action == 'apply' }}
        id: validate
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'apply' && steps.validate.outcome == 'success' }}
        run: terraform plan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' && steps.validate.outcome == 'success' }}
        run: terraform apply -auto-approve

      - name: Save EC2 IP to secrets
        if: ${{ github.event.inputs.action == 'apply' && steps.validate.outcome == 'success' }}
        working-directory: ./terraform
        run: |
          EC2_IP=$(terraform output -raw ec2_instance_public_ip)
          echo "Updating EC2_HOST secret with $EC2_IP"
          gh secret set EC2_HOST -b"$EC2_IP"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_SECRETS }}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve